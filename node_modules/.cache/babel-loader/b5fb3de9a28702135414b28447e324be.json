{"ast":null,"code":"// import { hasMetadata } from 'core-js/fn/reflect'\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    names: [{\n      id: 1,\n      name: \"rahul\"\n    }, {\n      id: 2,\n      name: \"drishit\"\n    }, {\n      id: 3,\n      name: \"ved\"\n    }, {\n      id: 4,\n      name: \"het\"\n    }]\n  },\n  getters: {\n    allNames: state => state.names\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names];\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id);\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        console.log('el -->', el); // if (el.id === data.editId) {\n        //   state.names[index].name = data.editUser;\n        // }\n      });\n    }\n  },\n  actions: {\n    addName: (context, userInfo) => {\n      context.commit(\"newName\", userInfo);\n    },\n    removeName: (context, id) => {\n      context.commit(\"deleteName\", id);\n    },\n    updateStateUser: (context, name) => {\n      context.commit(\"editStateUser\", name);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","names","id","name","getters","allNames","mutations","newName","userInfo","deleteName","filter","editStateUser","data","forEach","el","index","console","log","actions","addName","context","commit","removeName","updateStateUser","modules"],"sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/store/index.js"],"sourcesContent":["// import { hasMetadata } from 'core-js/fn/reflect'\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    names: [\n      {\n        id: 1,\n        name: \"rahul\",\n\n      }, {\n        id: 2,\n        name: \"drishit\",\n\n      }, {\n        id: 3,\n        name: \"ved\",\n\n      }, {\n        id: 4,\n        name: \"het\",\n\n      },\n    ]\n  },\n  getters: {\n    allNames: state => state.names,\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names]\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id)\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        console.log('el -->', el);\n        // if (el.id === data.editId) {\n        //   state.names[index].name = data.editUser;\n        // }\n      })\n\n    }\n  },\n  actions: {\n    addName: (context, userInfo) => {\n      context.commit(\"newName\", userInfo)\n\n    },\n    removeName: (context, id) => {\n      context.commit(\"deleteName\", id)\n    },\n    updateStateUser: (context, name) => {\n      context.commit(\"editStateUser\", name)\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE,CACL;MACEC,EAAE,EAAE,CADN;MAEEC,IAAI,EAAE;IAFR,CADK,EAKF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CALE,EASF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CATE,EAaF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CAbE;EADF,CADkB;EAsBzBC,OAAO,EAAE;IACPC,QAAQ,EAAEL,KAAK,IAAIA,KAAK,CAACC;EADlB,CAtBgB;EAyBzBK,SAAS,EAAE;IACTC,OAAO,EAAE,CAACP,KAAD,EAAQQ,QAAR,KAAqB;MAC5BR,KAAK,CAACC,KAAN,GAAc,CAACO,QAAD,EAAW,GAAGR,KAAK,CAACC,KAApB,CAAd;IACD,CAHQ;IAITQ,UAAU,EAAE,CAACT,KAAD,EAAQE,EAAR,KAAe;MACzBF,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACD,EAAL,IAAWA,EAAtC,CAAd;IACD,CANQ;IAOTS,aAAa,EAAE,CAACX,KAAD,EAAQY,IAAR,KAAiB;MAC9BZ,KAAK,CAACC,KAAN,CAAYY,OAAZ,CAAoB,CAACC,EAAD,EAAKC,KAAL,KAAe;QACjCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,EAAtB,EADiC,CAEjC;QACA;QACA;MACD,CALD;IAOD;EAfQ,CAzBc;EA0CzBI,OAAO,EAAE;IACPC,OAAO,EAAE,CAACC,OAAD,EAAUZ,QAAV,KAAuB;MAC9BY,OAAO,CAACC,MAAR,CAAe,SAAf,EAA0Bb,QAA1B;IAED,CAJM;IAKPc,UAAU,EAAE,CAACF,OAAD,EAAUlB,EAAV,KAAiB;MAC3BkB,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6BnB,EAA7B;IACD,CAPM;IAQPqB,eAAe,EAAE,CAACH,OAAD,EAAUjB,IAAV,KAAmB;MAClCiB,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgClB,IAAhC;IACD;EAVM,CA1CgB;EAsDzBqB,OAAO,EAAE;AAtDgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}