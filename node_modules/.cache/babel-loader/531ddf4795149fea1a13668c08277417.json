{"ast":null,"code":"import validator from \"validator\";\n\nconst ValidateRegisterInput = data => {\n  let errors = {};\n  const {\n    name,\n    email,\n    password,\n    confirm_password\n  } = data;\n\n  if (validator.isEmpty(name)) {\n    errors.name = \"Name field is required\";\n  }\n\n  if (!validator.isEmail(email)) {\n    errors.email = \"please Enter valid Email address.\";\n  }\n\n  if (validator.isEmpty(email)) {\n    errors.email = \"Email field is required\";\n  } // if (validator.isStrongPassword(password))\n  // {\n  //     errors.password=\"enter strong password\"\n  // }\n\n\n  if (password.length > 8) {\n    errors.password = \"enter below 8 \";\n    !preg_;\n  }\n\n  if (validator.isEmpty(password)) {\n    errors.password = \"Password field is required\";\n  }\n\n  if (!validator.equals(password, confirm_password)) {\n    errors.confirm_password = \"password should match\";\n  }\n\n  if (validator.isEmpty(confirm_password)) {\n    errors.confirm_password = \" Confirm password field is required\";\n  }\n\n  return {\n    isInvalid: Object.keys(errors).length > 0,\n    errors: errors\n  };\n};\n\nexport default ValidateRegisterInput;","map":{"version":3,"names":["validator","ValidateRegisterInput","data","errors","name","email","password","confirm_password","isEmpty","isEmail","length","preg_","equals","isInvalid","Object","keys"],"sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/validation/ValidateRegisterInput.js"],"sourcesContent":["import validator from \"validator\";\n\nconst ValidateRegisterInput = (data) => {\n\n    let errors = {};\n\n    const { name, email, password, confirm_password } = data\n\n    if (validator.isEmpty(name)) {\n        errors.name = \"Name field is required\"\n    }\n\n    if(!validator.isEmail(email)){\n        errors.email=\"please Enter valid Email address.\"\n    }\n    if (validator.isEmpty(email)) {\n        errors.email = \"Email field is required\"\n    }\n\n    // if (validator.isStrongPassword(password))\n    // {\n    //     errors.password=\"enter strong password\"\n    // }\n\n    if (password.length>8) {\n        errors.password=\"enter below 8 \"\n        !preg_\n    }\n\n    if (validator.isEmpty(password)) {\n        errors.password = \"Password field is required\"\n    }   \n\n    if (!validator.equals(password,confirm_password)){\n        errors.confirm_password=\"password should match\"\n    }\n\n    if (validator.isEmpty(confirm_password)) {\n        errors.confirm_password = \" Confirm password field is required\"\n    }\n\n    return {\n        isInvalid: Object.keys(errors).length > 0,\n        errors: errors,\n    }\n};\nexport default ValidateRegisterInput\n\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,qBAAqB,GAAIC,IAAD,IAAU;EAEpC,IAAIC,MAAM,GAAG,EAAb;EAEA,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC,QAAf;IAAyBC;EAAzB,IAA8CL,IAApD;;EAEA,IAAIF,SAAS,CAACQ,OAAV,CAAkBJ,IAAlB,CAAJ,EAA6B;IACzBD,MAAM,CAACC,IAAP,GAAc,wBAAd;EACH;;EAED,IAAG,CAACJ,SAAS,CAACS,OAAV,CAAkBJ,KAAlB,CAAJ,EAA6B;IACzBF,MAAM,CAACE,KAAP,GAAa,mCAAb;EACH;;EACD,IAAIL,SAAS,CAACQ,OAAV,CAAkBH,KAAlB,CAAJ,EAA8B;IAC1BF,MAAM,CAACE,KAAP,GAAe,yBAAf;EACH,CAfmC,CAiBpC;EACA;EACA;EACA;;;EAEA,IAAIC,QAAQ,CAACI,MAAT,GAAgB,CAApB,EAAuB;IACnBP,MAAM,CAACG,QAAP,GAAgB,gBAAhB;IACA,CAACK,KAAD;EACH;;EAED,IAAIX,SAAS,CAACQ,OAAV,CAAkBF,QAAlB,CAAJ,EAAiC;IAC7BH,MAAM,CAACG,QAAP,GAAkB,4BAAlB;EACH;;EAED,IAAI,CAACN,SAAS,CAACY,MAAV,CAAiBN,QAAjB,EAA0BC,gBAA1B,CAAL,EAAiD;IAC7CJ,MAAM,CAACI,gBAAP,GAAwB,uBAAxB;EACH;;EAED,IAAIP,SAAS,CAACQ,OAAV,CAAkBD,gBAAlB,CAAJ,EAAyC;IACrCJ,MAAM,CAACI,gBAAP,GAA0B,qCAA1B;EACH;;EAED,OAAO;IACHM,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBO,MAApB,GAA6B,CADrC;IAEHP,MAAM,EAAEA;EAFL,CAAP;AAIH,CA3CD;;AA4CA,eAAeF,qBAAf"},"metadata":{},"sourceType":"module"}