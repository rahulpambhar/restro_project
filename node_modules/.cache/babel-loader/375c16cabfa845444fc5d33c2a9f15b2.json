{"ast":null,"code":"import axios from 'axios';\nimport { mapGetters, mapActions } from 'vuex';\nimport HeaderNav from './Header.vue';\nexport default {\n  name: \"DataBase\",\n  components: {\n    HeaderNav\n  },\n\n  data() {\n    return {\n      UserName: \"\",\n      UserId: \"\",\n      UserEmail: \"\",\n      deleteUserId: '',\n      deleteUserName: '',\n      user: {\n        name: \"\",\n        email: \"\"\n      }\n    };\n  },\n\n  computed: mapGetters(['alldatabase']),\n\n  created() {\n    this.fetchUser();\n  },\n\n  methods: { ...mapActions(['fetchUser']),\n\n    async deletesUser(data) {\n      this.deleteUserId = data.DataBase.id;\n      this.deleteUserName = data.DataBase.name;\n    },\n\n    async deletesUserConfirm(id) {\n      let result = await axios.post('http://127.0.0.1:8000/api/deletesUser/' + id);\n\n      if (result.status == 200) {\n        this.fetchUser();\n      }\n    },\n\n    EditData(data) {\n      this.UserId = data.DataBase.id;\n      this.UserName = data.DataBase.name;\n      this.UserEmail = data.DataBase.email;\n    },\n\n    async EditUserConfirm(data) {\n      const EditedData = {\n        id: data.UserId,\n        name: data.UserName,\n        email: data.UserEmail\n      };\n      let result = await axios.post('http://127.0.0.1:8000/api/editUserConfirm', EditedData);\n\n      if (result.status === 200) {\n        this.fetchUser();\n      }\n    }\n\n  },\n\n  mounted() {\n    const user = localStorage.getItem('user - info');\n\n    if (!user) {\n      this.$router.push({\n        name: 'LogIn'\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAsGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,eAAe;EACXC,IAAI,EAAE,UADK;EAEXC,UAAU,EAAE;IACRF;EADQ,CAFD;;EAKXG,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EADP;MAEHC,MAAM,EAAE,EAFL;MAGHC,SAAS,EAAE,EAHR;MAIHC,YAAY,EAAE,EAJX;MAKHC,cAAc,EAAE,EALb;MAMHC,IAAI,EAAE;QACFR,IAAI,EAAE,EADJ;QAEFS,KAAK,EAAE;MAFL;IANH,CAAP;EAYH,CAlBU;;EAmBXC,QAAQ,EAAEb,UAAU,CAAC,CAAC,aAAD,CAAD,CAnBT;;EAoBXc,OAAO,GAAG;IACN,KAAKC,SAAL;EAEH,CAvBU;;EAwBXC,OAAO,EAAE,EACL,GAAGf,UAAU,CAAC,CAAC,WAAD,CAAD,CADR;;IAGL,MAAMgB,WAAN,CAAkBZ,IAAlB,EAAwB;MAEpB,KAAKI,YAAL,GAAoBJ,IAAI,CAACa,QAAL,CAAcC,EAAlC;MACA,KAAKT,cAAL,GAAsBL,IAAI,CAACa,QAAL,CAAcf,IAApC;IACH,CAPI;;IAQL,MAAMiB,kBAAN,CAAyBD,EAAzB,EAA6B;MAEzB,IAAIE,MAAK,GAAI,MAAMtB,KAAK,CAACuB,IAAN,CAAW,2CAA2CH,EAAtD,CAAnB;;MACA,IAAIE,MAAM,CAACE,MAAP,IAAiB,GAArB,EAA0B;QACtB,KAAKR,SAAL;MAEJ;IACH,CAfI;;IAgBLS,QAAQ,CAACnB,IAAD,EAAO;MACX,KAAKE,MAAL,GAAcF,IAAI,CAACa,QAAL,CAAcC,EAA5B;MACA,KAAKb,QAAL,GAAgBD,IAAI,CAACa,QAAL,CAAcf,IAA9B;MACA,KAAKK,SAAL,GAAiBH,IAAI,CAACa,QAAL,CAAcN,KAA/B;IAGH,CAtBI;;IAuBL,MAAMa,eAAN,CAAsBpB,IAAtB,EAA4B;MAExB,MAAMqB,UAAS,GAAI;QACfP,EAAE,EAAEd,IAAI,CAACE,MADM;QAEfJ,IAAI,EAAEE,IAAI,CAACC,QAFI;QAGfM,KAAK,EAAEP,IAAI,CAACG;MAHG,CAAnB;MAMA,IAAIa,MAAK,GAAI,MAAMtB,KAAK,CAACuB,IAAN,CAAW,2CAAX,EAAuDI,UAAvD,CAAnB;;MACA,IAAIL,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;QACvB,KAAKR,SAAL;MACJ;IACJ;;EAnCK,CAxBE;;EA6DXY,OAAO,GAAG;IAEN,MAAMhB,IAAG,GAAIiB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;;IACA,IAAI,CAAClB,IAAL,EAAW;MACP,KAAKmB,OAAL,CAAaC,IAAb,CAAkB;QAAE5B,IAAI,EAAE;MAAR,CAAlB;IACJ;EACJ;;AAnEW,CAAf","names":["axios","mapGetters","mapActions","HeaderNav","name","components","data","UserName","UserId","UserEmail","deleteUserId","deleteUserName","user","email","computed","created","fetchUser","methods","deletesUser","DataBase","id","deletesUserConfirm","result","post","status","EditData","EditUserConfirm","EditedData","mounted","localStorage","getItem","$router","push"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/DataBase.vue"],"sourcesContent":["<template>\n    <HeaderNav />\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"col  \">\n                <h3 class=\"text-success\">Users DataBase </h3>\n            </div>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">User's Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Action</th>\n                        <th scope=\"col\">Action</th>\n                        <th scope=\"col\"></th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\" (DataBase, index) in alldatabase\" :key=\"index\">\n                        <th>{{ DataBase.id }}</th>\n                        <td>{{ DataBase.name }} </td>\n                        <td>{{ DataBase.email }} </td>\n                        <td><button @click=\"deletesUser({ DataBase })\" type=\"button\" data-target=\"#deleteModal\"\n                                data-toggle=\"modal\"\n                                style=\"border:none; background:transparent;cursor: pointer; outline: none; \"\n                                class=\"text-danger\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\"\n                                    class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\" />\n                                </svg>\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n                                data-target=\"#exampleModal\" @click=\"EditData({DataBase})\">Edit\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <!--  Delete Modal -->\n            <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title text-danger\" id=\"exampleModalLabel\">Alert!!</h5>\n                        </div>\n                        <div class=\"modal-body\">\n                            You will lose <u class=\"text-success\">{{ deleteUserName }}</u> permanently...\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"\n                                @click=\"deletesUserConfirm(deleteUserId)\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Edit model -->\n            <div class=\" modal fade\" id=\"exampleModal\" role=\"dialog\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Name</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                                style=\"border: none ; background-color: transparent; \">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your name here..\" v-model=\"UserName\">\n                                </div>\n                                <div class=\"form-group mt-2\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your name here..\" v-model=\"UserEmail\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">close</button>\n                                    <button type=\"button\" class=\"btn btn-success\"\n                                        @click=\"EditUserConfirm({ UserName, UserEmail, UserId })\"\n                                        data-dismiss=\"modal\">Save</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapGetters, mapActions } from 'vuex'\nimport HeaderNav from './Header.vue'\nexport default {\n    name: \"DataBase\",\n    components: {\n        HeaderNav\n    },\n    data() {\n        return {\n            UserName: \"\",\n            UserId: \"\",\n            UserEmail: \"\",\n            deleteUserId: '',\n            deleteUserName: '',\n            user: {\n                name: \"\",\n                email: \"\"\n            }\n        }\n\n    },\n    computed: mapGetters(['alldatabase']),\n    created() {\n        this.fetchUser()\n\n    },\n    methods: {\n        ...mapActions(['fetchUser']),\n\n        async deletesUser(data) {\n\n            this.deleteUserId = data.DataBase.id\n            this.deleteUserName = data.DataBase.name\n        },\n        async deletesUserConfirm(id) {\n\n            let result = await axios.post('http://127.0.0.1:8000/api/deletesUser/' + id);\n            if (result.status == 200) {\n                this.fetchUser()\n\n            }\n        },\n        EditData(data) {\n            this.UserId = data.DataBase.id\n            this.UserName = data.DataBase.name\n            this.UserEmail = data.DataBase.email\n            \n\n        },\n        async EditUserConfirm(data) {\n            \n            const EditedData = {\n                id: data.UserId,\n                name: data.UserName,\n                email: data.UserEmail,\n                \n            }\n            let result = await axios.post('http://127.0.0.1:8000/api/editUserConfirm',EditedData)\n            if (result.status === 200) {\n                this.fetchUser()                \n            }\n        }\n    },\n    mounted() {\n\n        const user = localStorage.getItem('user - info')\n        if (!user) {\n            this.$router.push({ name: 'LogIn' })\n        }\n    }\n}\n</script>   "]},"metadata":{},"sourceType":"module"}