{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport HeaderNav from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: \"HomePage\",\n  components: {\n    HeaderNav\n  },\n  computed: mapGetters([\"allNames\"]),\n\n  data() {\n    return {\n      UserName: \"\",\n      restaurants: [],\n      name: \"\",\n      editUser: \"\",\n      updatedName: \"\",\n      editId: \"\",\n      count: \"\",\n      user: '',\n      deleteRestaurant: \"\"\n    };\n  },\n\n  methods: {\n    async deleteRes(data) {\n      this.deleteRestaurant = data.item.name;\n    },\n\n    DeleteRestroConfirm(id) {\n      alert(\"sdjkb\"); // let result = await axios.post('http://127.0.0.1:8000/api/deleteRestaurant/' + data.item.id);\n      // if (result.status == 200) {\n      //     this.loadData()\n      // }\n    },\n\n    async loadData() {\n      const user = localStorage.getItem('user - info');\n      this.UserName = JSON.parse(user).name;\n      const result = await axios.post('http://127.0.0.1:8000/api/rastaurantDataBase');\n      this.restaurants = result.data.RestaurantsData;\n    },\n\n    ...mapActions(['addName', 'removeName', 'updateStateUser']),\n\n    submitform() {\n      this.addName({\n        id: this.idd(),\n        name: this.name\n      });\n    },\n\n    EditName(data, id) {\n      this.editUser = data;\n      this.editId = id;\n    },\n\n    idd() {\n      return this.count = \"New Name\";\n    }\n\n  },\n\n  mounted() {\n    this.user = localStorage.getItem('user - info');\n\n    if (!this.user) {\n      this.$router.push({\n        name: 'SignUp'\n      });\n    }\n\n    this.loadData();\n  }\n\n};","map":{"version":3,"mappings":"AAkEA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IAAI,EAAE,UADK;EAEXC,UAAU,EAAE;IACRH;EADQ,CAFD;EAKXI,QAAQ,EAAEN,UAAU,CAAC,CAAC,UAAD,CAAD,CALT;;EAMXO,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EADP;MAEHC,WAAW,EAAE,EAFV;MAGHL,IAAI,EAAE,EAHH;MAIHM,QAAQ,EAAE,EAJP;MAKHC,WAAW,EAAE,EALV;MAMHC,MAAM,EAAE,EANL;MAOHC,KAAK,EAAE,EAPJ;MAQHC,IAAI,EAAE,EARH;MASHC,gBAAgB,EAAE;IATf,CAAP;EAWH,CAlBU;;EAmBXC,OAAO,EAAE;IACL,MAAMC,SAAN,CAAgBV,IAAhB,EAAsB;MAElB,KAAKQ,gBAAL,GAAwBR,IAAI,CAACW,IAAL,CAAUd,IAAlC;IAEH,CALI;;IAMLe,mBAAmB,CAACC,EAAD,EAAK;MACpBC,KAAK,CAAC,OAAD,CAAL,CADoB,CAElB;MACF;MACA;MACA;IACH,CAZI;;IAaL,MAAMC,QAAN,GAAiB;MACb,MAAMR,IAAG,GAAIS,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;MACA,KAAKhB,QAAL,GAAgBiB,IAAI,CAACC,KAAL,CAAWZ,IAAX,EAAiBV,IAAjC;MACA,MAAMuB,MAAK,GAAI,MAAMxB,KAAK,CAACyB,IAAN,CAAW,8CAAX,CAArB;MACA,KAAKnB,WAAL,GAAmBkB,MAAM,CAACpB,IAAP,CAAYsB,eAA/B;IAEH,CAnBI;;IAoBL,GAAG5B,UAAU,CAAC,CAAC,SAAD,EAAY,YAAZ,EAA0B,iBAA1B,CAAD,CApBR;;IAqBL6B,UAAU,GAAG;MACT,KAAKC,OAAL,CAAa;QAAEX,EAAE,EAAE,KAAKY,GAAL,EAAN;QAAkB5B,IAAI,EAAE,KAAKA;MAA7B,CAAb;IAEH,CAxBI;;IAyBL6B,QAAQ,CAAC1B,IAAD,EAAOa,EAAP,EAAW;MACf,KAAKV,QAAL,GAAgBH,IAAhB;MACA,KAAKK,MAAL,GAAcQ,EAAd;IAEH,CA7BI;;IA8BLY,GAAG,GAAG;MAEF,OAAO,KAAKnB,KAAL,GAAa,UAApB;IACJ;;EAjCK,CAnBE;;EAuDXqB,OAAO,GAAG;IAEN,KAAKpB,IAAL,GAAYS,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;;IACA,IAAI,CAAC,KAAKV,IAAV,EAAgB;MACZ,KAAKqB,OAAL,CAAaC,IAAb,CAAkB;QAAEhC,IAAI,EAAE;MAAR,CAAlB;IACJ;;IACA,KAAKkB,QAAL;EACJ;;AA9DW,CAAf","names":["mapGetters","mapActions","HeaderNav","axios","name","components","computed","data","UserName","restaurants","editUser","updatedName","editId","count","user","deleteRestaurant","methods","deleteRes","item","DeleteRestroConfirm","id","alert","loadData","localStorage","getItem","JSON","parse","result","post","RestaurantsData","submitform","addName","idd","EditName","mounted","$router","push"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/Home.vue"],"sourcesContent":["<template >\n    <div class=\"row\">\n        <HeaderNav />\n        <h6 class=\"d-flex\">welcome <span class=\"text-success  d-flex\">{{ this.user }} || <h6 class=\"mx-3 text-\">list of\n                    restaurants</h6>\n            </span>\n        </h6>\n        <div class=\"col\">\n            <div class=\"co--5 d-flex\">\n\n                <button class=\"btn btn-primary\">\n                    <router-link class=\"nav-link text-white\" to=\"/addrestro\">Add New Restaurant</router-link>\n                </button>\n            </div>\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">R_Name</th>\n                        <th scope=\"col\">Address</th>\n                        <th scope=\"col\">Contact</th>\n                        <th scope=\"col\">Actions</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"item in restaurants\" :key=\"item.id\">\n                        <th>{{ item.id }}</th>\n                        <td>{{ item.name }}</td>\n                        <td>{{ item.address }}</td>\n                        <td>{{ item.contact }}</td>\n                        <td>\n                            <router-link :to=\"'/updaterestro/' + item.id\" class=\"text-decoration-none\">Update\n                            </router-link>\n                            <button type=\"button\" class=\"btn btn-danger mx-3\" data-toggle=\"modal\"\n                                v-on:click=\"deleteRes({ item })\" data-target=\"#exampleModal\">Delete\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n    <!-- delete Modal -->\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title text-danger\" id=\"exampleModalLabel\"> Alert !!!!</h5>\n                </div>\n                <div class=\"modal-body\">\n                    It will Delete : {{ deleteRestaurant }}\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" class=\"btn btn-danger\" @click=\"DeleteRestroConfirm(id)\">Delete</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport HeaderNav from './Header.vue'\nimport axios from 'axios'\nexport default {\n    name: \"HomePage\",\n    components: {\n        HeaderNav\n    },\n    computed: mapGetters([\"allNames\"]),\n    data() {\n        return {\n            UserName: \"\",\n            restaurants: [],\n            name: \"\",\n            editUser: \"\",\n            updatedName: \"\",\n            editId: \"\",\n            count: \"\",\n            user: '',\n            deleteRestaurant: \"\"\n        }\n    },\n    methods: {\n        async deleteRes(data) {\n\n            this.deleteRestaurant = data.item.name;\n          \n        },\n        DeleteRestroConfirm(id) {\n            alert(\"sdjkb\");\n              // let result = await axios.post('http://127.0.0.1:8000/api/deleteRestaurant/' + data.item.id);\n            // if (result.status == 200) {\n            //     this.loadData()\n            // }\n        },\n        async loadData() {\n            const user = localStorage.getItem('user - info')\n            this.UserName = JSON.parse(user).name\n            const result = await axios.post('http://127.0.0.1:8000/api/rastaurantDataBase');\n            this.restaurants = result.data.RestaurantsData\n\n        },\n        ...mapActions(['addName', 'removeName', 'updateStateUser']),\n        submitform() {\n            this.addName({ id: this.idd(), name: this.name });\n\n        },\n        EditName(data, id) {\n            this.editUser = data;\n            this.editId = id;\n\n        },\n        idd() {\n\n            return this.count = \"New Name\"\n        }\n\n    },\n    mounted() {\n\n        this.user = localStorage.getItem('user - info')\n        if (!this.user) {\n            this.$router.push({ name: 'SignUp' })\n        }\n        this.loadData()\n    }\n}\n</script>\n\n\n"]},"metadata":{},"sourceType":"module"}