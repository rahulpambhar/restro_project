{"ast":null,"code":"// import { createStore } from 'vuex'\n// export default createStore({\n//   state: {\n//     names: [\n//       {\n//         id: 1,\n//         name: \"rahul\",\n//       }, {\n//         id: 2,\n//         name: \"drishit\",\n//       }, {\n//         id: 3,\n//         name: \"ved\",\n//       }, {\n//         id: 4,\n//         name: \"het\",\n//       },\n//     ]\n//   },\n//   getters: {\n//     allNames: state => state.names,\n//   },\n//   mutations: {\n//     newName: (state, userInfo) => {\n//       state.names = [userInfo, ...state.names]\n//     },\n//     deleteName: (state, id) => {\n//       state.names = state.names.filter(name => name.id != id)\n//     },\n//     editStateUser: (state, data) => {\n//       state.names.forEach((el, index) => {\n//         if (el.id === data.editId) {\n//           state.names[index].name = data.editUser;\n//         }\n//       })\n//     }\n//   },\n//   actions: {\n//     addName: ({ commit }, userInfo) => {\n//       commit(\"newName\", userInfo)\n//     },\n//     removeName: ({ commit }, id) => {\n//       commit(\"deleteName\", id)\n//     },\n//     updateStateUser: ({ commit }, name) => {\n//       commit(\"editStateUser\", name)\n//     }\n//   },\n//   modules: {\n//   }\n// })\nimport vuex from 'vuex';\nimport vue from 'vue';\nimport ToDo from './modules/ToDo'; // Load vuex\n\nvue.use(Vuex); // create store\n\nexport default new Vuex.Store({\n  modules: {}\n});","map":{"version":3,"names":["vuex","vue","ToDo","use","Vuex","Store","modules"],"sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/store/index.js"],"sourcesContent":["// import { createStore } from 'vuex'\n\n// export default createStore({\n//   state: {\n//     names: [\n//       {\n//         id: 1,\n//         name: \"rahul\",\n\n//       }, {\n//         id: 2,\n//         name: \"drishit\",\n\n//       }, {\n//         id: 3,\n//         name: \"ved\",\n\n//       }, {\n//         id: 4,\n//         name: \"het\",\n\n//       },\n//     ]\n//   },\n//   getters: {\n//     allNames: state => state.names,\n//   },\n//   mutations: {\n//     newName: (state, userInfo) => {\n//       state.names = [userInfo, ...state.names]\n//     },\n//     deleteName: (state, id) => {\n//       state.names = state.names.filter(name => name.id != id)\n//     },\n//     editStateUser: (state, data) => {\n//       state.names.forEach((el, index) => {\n//         if (el.id === data.editId) {\n//           state.names[index].name = data.editUser;\n//         }\n//       })\n//     }\n//   },\n//   actions: {\n//     addName: ({ commit }, userInfo) => {\n//       commit(\"newName\", userInfo)\n\n//     },\n//     removeName: ({ commit }, id) => {\n//       commit(\"deleteName\", id)\n//     },\n//     updateStateUser: ({ commit }, name) => {\n//       commit(\"editStateUser\", name)\n//     }\n//   },\n//   modules: {\n//   }\n// })\n\nimport vuex from 'vuex'\nimport vue from 'vue'\nimport ToDo from './modules/ToDo'\n\n// Load vuex\nvue.use(Vuex);\n\n// create store\n\nexport default new Vuex.Store({\n  modules:{}\n})\n\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQC,IAAR,E,CAEA;;AAEA,eAAe,IAAIA,IAAI,CAACC,KAAT,CAAe;EAC5BC,OAAO,EAAC;AADoB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}