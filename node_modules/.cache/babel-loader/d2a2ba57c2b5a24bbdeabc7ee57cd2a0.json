{"ast":null,"code":"import axios from 'axios';\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    names: [{\n      id: 1,\n      name: \"rahul\"\n    }, {\n      id: 2,\n      name: \"drishit\"\n    }, {\n      id: 3,\n      name: \"ved\"\n    }, {\n      id: 4,\n      name: \"het\"\n    }],\n    database: [],\n    todo: []\n  },\n  getters: {\n    allNames: state => state.names,\n    alldatabase: state => state.database,\n    alltodo: state => state.todo\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names];\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id);\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        if (el.id === data.editId) {\n          state.names[index].name = data.editUser;\n        }\n      });\n    },\n    fetchUsersData: (state, userInfo) => {\n      state.database = userInfo;\n      state.todo = userInfo;\n    },\n    removeToDo: state => {// state.todo =state.todo.filter(name=> )\n    }\n  },\n  actions: {\n    addName: ({\n      commit\n    }, userInfo) => {\n      commit(\"newName\", userInfo);\n    },\n    removeName: ({\n      commit\n    }, id) => {\n      commit(\"deleteName\", id);\n    },\n    updateStateUser: ({\n      commit\n    }, name) => {\n      commit(\"editStateUser\", name);\n    },\n\n    async fetchUser({\n      commit\n    }) {\n      const response = await axios.get('http://localhost:3000/user');\n      commit('fetchUsersData', response.data);\n    },\n\n    removeToDo: ({\n      commit\n    }, id) => {\n      commit('removeToDo', id);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["axios","createStore","state","names","id","name","database","todo","getters","allNames","alldatabase","alltodo","mutations","newName","userInfo","deleteName","filter","editStateUser","data","forEach","el","index","editId","editUser","fetchUsersData","removeToDo","actions","addName","commit","removeName","updateStateUser","fetchUser","response","get","modules"],"sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/store/index.js"],"sourcesContent":["import axios from 'axios'\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    names: [\n      {\n        id: 1,\n        name: \"rahul\",\n\n      }, {\n        id: 2,\n        name: \"drishit\",\n\n      }, {\n        id: 3,\n        name: \"ved\",\n\n      }, {\n        id: 4,\n        name: \"het\",\n\n      },\n    ],\n    database: [\n\n    ],\n    todo: [\n\n    ]\n  },\n  getters: {\n    allNames: state => state.names,\n    alldatabase: state => state.database,\n    alltodo: state => state.todo,\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names]\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id)\n\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        if (el.id === data.editId) {\n          state.names[index].name = data.editUser;\n        }\n      })\n    },\n    fetchUsersData: (state, userInfo) => {\n      state.database = userInfo\n      state.todo = userInfo\n\n    },\n    removeToDo: (state) => {\n      // state.todo =state.todo.filter(name=> )\n    }\n  },\n  actions: {\n    addName: ({ commit }, userInfo) => {\n      commit(\"newName\", userInfo)\n\n    },\n    removeName: ({ commit }, id) => {\n      commit(\"deleteName\", id)\n    },\n    updateStateUser: ({ commit }, name) => {\n      commit(\"editStateUser\", name)\n    },\n    async fetchUser({ commit }) {\n\n      const response = await axios.get('http://localhost:3000/user')\n      commit('fetchUsersData', response.data)\n\n    },\n    removeToDo: ({ commit }, id) => {\n      commit('removeToDo', id)\n    }\n  },\n  modules: {\n  }\n})\n\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE,CACL;MACEC,EAAE,EAAE,CADN;MAEEC,IAAI,EAAE;IAFR,CADK,EAKF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CALE,EASF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CATE,EAaF;MACDD,EAAE,EAAE,CADH;MAEDC,IAAI,EAAE;IAFL,CAbE,CADF;IAoBLC,QAAQ,EAAE,EApBL;IAuBLC,IAAI,EAAE;EAvBD,CADkB;EA4BzBC,OAAO,EAAE;IACPC,QAAQ,EAAEP,KAAK,IAAIA,KAAK,CAACC,KADlB;IAEPO,WAAW,EAAER,KAAK,IAAIA,KAAK,CAACI,QAFrB;IAGPK,OAAO,EAAET,KAAK,IAAIA,KAAK,CAACK;EAHjB,CA5BgB;EAiCzBK,SAAS,EAAE;IACTC,OAAO,EAAE,CAACX,KAAD,EAAQY,QAAR,KAAqB;MAC5BZ,KAAK,CAACC,KAAN,GAAc,CAACW,QAAD,EAAW,GAAGZ,KAAK,CAACC,KAApB,CAAd;IACD,CAHQ;IAITY,UAAU,EAAE,CAACb,KAAD,EAAQE,EAAR,KAAe;MACzBF,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYa,MAAZ,CAAmBX,IAAI,IAAIA,IAAI,CAACD,EAAL,IAAWA,EAAtC,CAAd;IAED,CAPQ;IAQTa,aAAa,EAAE,CAACf,KAAD,EAAQgB,IAAR,KAAiB;MAC9BhB,KAAK,CAACC,KAAN,CAAYgB,OAAZ,CAAoB,CAACC,EAAD,EAAKC,KAAL,KAAe;QACjC,IAAID,EAAE,CAAChB,EAAH,KAAUc,IAAI,CAACI,MAAnB,EAA2B;UACzBpB,KAAK,CAACC,KAAN,CAAYkB,KAAZ,EAAmBhB,IAAnB,GAA0Ba,IAAI,CAACK,QAA/B;QACD;MACF,CAJD;IAKD,CAdQ;IAeTC,cAAc,EAAE,CAACtB,KAAD,EAAQY,QAAR,KAAqB;MACnCZ,KAAK,CAACI,QAAN,GAAiBQ,QAAjB;MACAZ,KAAK,CAACK,IAAN,GAAaO,QAAb;IAED,CAnBQ;IAoBTW,UAAU,EAAGvB,KAAD,IAAW,CACrB;IACD;EAtBQ,CAjCc;EAyDzBwB,OAAO,EAAE;IACPC,OAAO,EAAE,CAAC;MAAEC;IAAF,CAAD,EAAad,QAAb,KAA0B;MACjCc,MAAM,CAAC,SAAD,EAAYd,QAAZ,CAAN;IAED,CAJM;IAKPe,UAAU,EAAE,CAAC;MAAED;IAAF,CAAD,EAAaxB,EAAb,KAAoB;MAC9BwB,MAAM,CAAC,YAAD,EAAexB,EAAf,CAAN;IACD,CAPM;IAQP0B,eAAe,EAAE,CAAC;MAAEF;IAAF,CAAD,EAAavB,IAAb,KAAsB;MACrCuB,MAAM,CAAC,eAAD,EAAkBvB,IAAlB,CAAN;IACD,CAVM;;IAWP,MAAM0B,SAAN,CAAgB;MAAEH;IAAF,CAAhB,EAA4B;MAE1B,MAAMI,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAU,4BAAV,CAAvB;MACAL,MAAM,CAAC,gBAAD,EAAmBI,QAAQ,CAACd,IAA5B,CAAN;IAED,CAhBM;;IAiBPO,UAAU,EAAE,CAAC;MAAEG;IAAF,CAAD,EAAaxB,EAAb,KAAoB;MAC9BwB,MAAM,CAAC,YAAD,EAAexB,EAAf,CAAN;IACD;EAnBM,CAzDgB;EA8EzB8B,OAAO,EAAE;AA9EgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}