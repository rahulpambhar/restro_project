{"ast":null,"code":"import axios from 'axios';\nimport { mapGetters, mapActions } from 'vuex';\nimport AddRestroValidationInput from '/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/validation/AddRestroValidation.js';\nimport HeaderNav from './Header.vue';\nexport default {\n  name: \"DataBase\",\n  components: {\n    HeaderNav\n  },\n\n  data() {\n    return {\n      UserName: \"\",\n      UserId: \"\",\n      UserEmail: \"\",\n      deleteUserId: '',\n      deleteUserName: '',\n      user: {\n        name: \"\",\n        email: \"\"\n      },\n      restaurant: {\n        R_name: \"\",\n        R_address: \"\",\n        R_contact: ''\n      },\n      addRestroErr: {},\n      RelationId: '',\n      userRestaurants: ''\n    };\n  },\n\n  computed: mapGetters(['alldatabase']),\n\n  created() {\n    this.fetchUser();\n  },\n\n  methods: { ...mapActions(['fetchUser']),\n\n    async deletesUser(data) {\n      this.deleteUserId = data.DataBase.id;\n      this.deleteUserName = data.DataBase.name;\n    },\n\n    async deletesUserConfirm(id) {\n      let result = await axios.post('http://127.0.0.1:8000/api/deletesUser/' + id);\n\n      if (result.status == 200) {\n        this.fetchUser();\n      }\n    },\n\n    EditData(data) {\n      this.UserId = data.DataBase.id;\n      this.UserName = data.DataBase.name;\n      this.UserEmail = data.DataBase.email;\n    },\n\n    async EditUserConfirm(data) {\n      const EditedData = {\n        id: data.UserId,\n        name: data.UserName,\n        email: data.UserEmail\n      };\n      let result = await axios.post('http://127.0.0.1:8000/api/editUserConfirm', EditedData);\n\n      if (result.status === 200) {\n        this.fetchUser();\n      }\n    },\n\n    async UserRelationId(id) {\n      this.RelationId = id;\n      const result = await axios.post(`http://127.0.0.1:8000/api/UserRelation/${id}`);\n      this.userRestaurants = result.data.restaurants;\n    },\n\n    async addrestaurant() {\n      const {\n        isInvalid,\n        addRestroErr\n      } = AddRestroValidationInput({\n        name: this.restaurant.R_name,\n        address: this.restaurant.R_address,\n        contact: this.restaurant.R_contact\n      });\n\n      if (isInvalid) {\n        this.addRestroErr = addRestroErr;\n      } else {\n        const data = {\n          user_id: this.RelationId,\n          name: this.restaurant.R_name,\n          address: this.restaurant.R_address,\n          contact: this.restaurant.R_contact\n        };\n        let result = await axios.post(`http://127.0.0.1:8000/api/addrestaurants`, data);\n\n        if (result.status === 200) {\n          alert(\"Successfully Added..\");\n        }\n      }\n    },\n\n    emptyData() {\n      this.restaurant.R_name = \"\";\n      this.restaurant.R_address = \"\";\n      this.restaurant.R_contact = \"\";\n      this.addRestroErr = {};\n    }\n\n  },\n\n  mounted() {\n    const user = localStorage.getItem('user - info');\n\n    if (!user) {\n      this.$router.push({\n        name: 'LogIn'\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","mapGetters","mapActions","AddRestroValidationInput","HeaderNav","name","components","data","UserName","UserId","UserEmail","deleteUserId","deleteUserName","user","email","restaurant","R_name","R_address","R_contact","addRestroErr","RelationId","userRestaurants","computed","created","fetchUser","methods","deletesUser","DataBase","id","deletesUserConfirm","result","post","status","EditData","EditUserConfirm","EditedData","UserRelationId","restaurants","addrestaurant","isInvalid","address","contact","user_id","alert","emptyData","mounted","localStorage","getItem","$router","push"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/DataBase.vue"],"sourcesContent":["<template>\n    <HeaderNav />\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"col  \">\n                <h3 class=\"text-success\">Users DataBase </h3>\n            </div>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">User's Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Field</th>\n                        <th scope=\"col\">Action</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\" (DataBase, index) in alldatabase\" :key=\"index\">\n                        <th>{{ DataBase.id }}</th>\n                        <td>{{ DataBase.name }} </td>\n                        <td>{{ DataBase.email }} </td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-success\" @click=\"UserRelationId(DataBase.id)\"\n                                data-toggle=\"modal\" data-target=\"#Usars_Restaurat\">\n                                user Restaurant\n                            </button>\n\n                        </td>\n                        <td><button @click=\"deletesUser({ DataBase })\" type=\"button\" data-target=\"#deleteModal\"\n                                data-toggle=\"modal\"\n                                style=\"border:none; background:transparent;cursor: pointer; outline: none; \"\n                                class=\"text-danger\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\"\n                                    class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\" />\n                                </svg>\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n                                data-target=\"#exampleModal\" @click=\"EditData({ DataBase })\">Edit User\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <!-- Usar's Restaurat -->\n            <div class=\"modal fade\" id=\"Usars_Restaurat\" tabindex=\"-1\" role=\"dialog\"\n                aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Restaurant Detail</h5>\n                            UserId:{{ RelationId }}\n                            <h6>{{ userRestaurants }}</h6>\n\n                            <tr v-for=\" (Restaurants, index) in userRestaurants\" :key=\"index\">\n                            <td></td>\n                            </tr>\n\n                        </div>\n                        <form @submit.prevent=\"addrestaurant()\">\n                            <div class=\"modal-body\">\n                                <div class=\"form-group\">\n                                    <label for=\"recipient-name\" class=\"col-form-label\">Restaurant Name</label>\n                                    <input type=\"text\" class=\"form-control\" v-model=\"restaurant.R_name\">\n                                    <h6 class=\"text-danger\">{{ addRestroErr.name }}</h6>\n\n                                    <label for=\"recipient-name\" class=\"col-form-label\">Address</label>\n                                    <input type=\"text\" class=\"form-control\" v-model=\"restaurant.R_address\">\n                                    <h6 class=\"text-danger\">{{ addRestroErr.address }}</h6>\n\n                                    <label for=\"message-text\" class=\"col-form-label\">Contact Detail</label>\n                                    <input type=\"text\" class=\"form-control\" v-model=\"restaurant.R_contact\">\n                                    <h6 class=\"text-danger\">{{ addRestroErr.contact }}</h6>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                                    @click=\"emptyData\">Back</button>\n                                <button type=\"submit\" class=\"btn btn-success\">Save </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <!--  Delete Modal -->\n            <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title text-danger\" id=\"exampleModalLabel\">Alert!!</h5>\n                        </div>\n                        <div class=\"modal-body\">\n                            You will lose <u class=\"text-success\">{{ deleteUserName }}</u> permanently...\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\">Cancle</button>\n                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"\n                                @click=\"deletesUserConfirm(deleteUserId)\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Edit model -->\n            <div class=\" modal fade\" id=\"exampleModal\" role=\"dialog\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Name</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                                style=\"border: none ; background-color: transparent; \">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your name here..\" v-model=\"UserName\">\n                                </div>\n                                <div class=\"form-group mt-2\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your name here..\" v-model=\"UserEmail\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">close</button>\n                                    <button type=\"button\" class=\"btn btn-success\"\n                                        @click=\"EditUserConfirm({ UserName, UserEmail, UserId })\"\n                                        data-dismiss=\"modal\">Save</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapGetters, mapActions } from 'vuex'\nimport AddRestroValidationInput from '/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/validation/AddRestroValidation.js'\nimport HeaderNav from './Header.vue'\nexport default {\n    name: \"DataBase\",\n    components: {\n        HeaderNav\n    },\n    data() {\n        return {\n            UserName: \"\",\n            UserId: \"\",\n            UserEmail: \"\",\n            deleteUserId: '',\n            deleteUserName: '',\n            user: {\n                name: \"\",\n                email: \"\"\n            },\n            restaurant: {\n                R_name: \"\",\n                R_address: \"\",\n                R_contact: ''\n            },\n            addRestroErr: {},\n            RelationId: '',\n            userRestaurants:''\n        }\n\n    },\n    computed: mapGetters(['alldatabase']),\n    created() {\n        this.fetchUser()\n\n    },\n    methods: {\n        ...mapActions(['fetchUser']),\n\n        async deletesUser(data) {\n\n            this.deleteUserId = data.DataBase.id\n            this.deleteUserName = data.DataBase.name\n        },\n        async deletesUserConfirm(id) {\n\n            let result = await axios.post('http://127.0.0.1:8000/api/deletesUser/' + id);\n            if (result.status == 200) {\n                this.fetchUser()\n\n            }\n        },\n        EditData(data) {\n            this.UserId = data.DataBase.id\n            this.UserName = data.DataBase.name\n            this.UserEmail = data.DataBase.email\n\n\n        },\n        async EditUserConfirm(data) {\n\n            const EditedData = {\n                id: data.UserId,\n                name: data.UserName,\n                email: data.UserEmail,\n\n            }\n            let result = await axios.post('http://127.0.0.1:8000/api/editUserConfirm', EditedData)\n            if (result.status === 200) {\n                this.fetchUser()\n            }\n        },\n        async UserRelationId(id) {\n            this.RelationId = id\n            \n            const result = await axios.post(`http://127.0.0.1:8000/api/UserRelation/${id}`);\n            this.userRestaurants = result.data.restaurants\n            \n\n\n        },\n        async addrestaurant() {\n\n\n            const { isInvalid, addRestroErr } = AddRestroValidationInput({\n                name: this.restaurant.R_name,\n                address: this.restaurant.R_address,\n                contact: this.restaurant.R_contact\n            })\n\n            if (isInvalid) {\n                this.addRestroErr = addRestroErr\n\n            } else {\n                const data = {\n                    user_id: this.RelationId,\n                    name: this.restaurant.R_name,\n                    address: this.restaurant.R_address,\n                    contact: this.restaurant.R_contact\n                }\n                let result = await axios.post(`http://127.0.0.1:8000/api/addrestaurants`, data);\n\n                if (result.status === 200) {\n                    alert(\"Successfully Added..\");\n\n                }\n            }\n        },\n        emptyData() {\n            this.restaurant.R_name = \"\"\n            this.restaurant.R_address = \"\"\n            this.restaurant.R_contact = \"\"\n            this.addRestroErr = {}\n\n        }\n\n    },\n    mounted() {\n\n        const user = localStorage.getItem('user - info')\n        if (!user) {\n            this.$router.push({ name: 'LogIn' })\n        }\n    }\n}\n</script>   "]},"metadata":{},"sourceType":"module"}