{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"welcome \");\n\nconst _hoisted_3 = {\n  class: \"text-success\"\n};\nconst _hoisted_4 = {\n  class: \"col\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"co--5 d-flex\"\n}, [/*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"text-primary\"\n}, \"List of Restaurants\"), /*#__PURE__*/_createTextVNode(\" h \")], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"table\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"R_Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Address\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Contact\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Actions\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n})])], -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Update \");\n\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderNav = _resolveComponent(\"HeaderNav\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_HeaderNav), _createElementVNode(\"h6\", null, [_hoisted_2, _createElementVNode(\"span\", _hoisted_3, _toDisplayString(this.user), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.restaurants, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.id\n    }, [_createElementVNode(\"th\", null, _toDisplayString(item.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(item.address), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(item.contact), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/updaterestro/' + item.id,\n      class: \"text-decoration-none\"\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"]), _createElementVNode(\"button\", {\n      class: \"btn btn-danger mx-3\",\n      onClick: $event => $options.deleteRes(item.id)\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_9)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])]), _createCommentVNode(\" \\n    <h3 class=\\\"text-success \\\">Practice for Vuex <span class=\\\"text-secondary\\\">(Data coming from json server)</span></h3>\\n    <div class=\\\"row \\\">\\n        <div class=\\\"col \\\">\\n            <form @submit.prevent=\\\"submitform\\\">\\n                <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Enter Name\\\" v-model=\\\"name\\\">\\n                <input type=\\\"submit\\\" value=\\\"Add Name\\\" class=\\\"btn btn-primary mx-2\\\">\\n            </form>\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">ID</th>\\n                        <th scope=\\\"col\\\">Name</th>\\n                        <th scope=\\\"col\\\">Remove</th>\\n                        <th scope=\\\"col\\\">Action</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr v-for=\\\" (names, index) in allNames\\\" :key=\\\"index\\\">\\n                        <th>{{ names.id }}</th>\\n                        <td>{{ names.name }} </td>\\n                        <td><button @click=\\\"removeName(names.id)\\\"\\n                                style=\\\"border:none; background:transparent;cursor: pointer; outline: none; \\\"\\n                                class=\\\"text-danger\\\">\\n                                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"25\\\" height=\\\"25\\\" fill=\\\"currentColor\\\"\\n                                    class=\\\"bi bi-x-lg\\\" viewBox=\\\"0 0 16 16\\\">\\n                                    <path\\n                                        d=\\\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\\\" />\\n                                </svg>\\n                            </button>\\n                        </td>\\n                        <td>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n                                data-target=\\\"#exampleModal\\\" @click=\\\"EditName(names.name, names.id)\\\">Edit\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\" modal fade\\\" id=\\\"exampleModal\\\" role=\\\"dialog\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n                aria-hidden=\\\"true\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Name</h5>\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n                                style=\\\"border: none ; background-color: transparent; \\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                            <form>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recipient-name\\\"\\n                                        placeholder=\\\"Edit your name here..\\\" v-model=\\\"editUser\\\">\\n                                </div>\\n                                <div class=\\\"modal-footer\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">close</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n                                        @click=\\\"updateStateUser({ editUser, editId })\\\"\\n                                        data-dismiss=\\\"modal\\\">Save</button>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div> \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;iDAEH;;;EAAcA,KAAK,EAAC;;;EACnBA,KAAK,EAAC;;;gCACPC,oBAGM,KAHN,EAGM;EAHDD,KAAK,EAAC;AAGL,CAHN,EAAyB,cACrBC,oBAAkD,IAAlD,EAAkD;EAA9CD,KAAK,EAAC;AAAwC,CAAlD,EAA0B,qBAA1B,CADqB,gCAC6B,MAD7B,CAAzB;;AAAA;;;EAKOA,KAAK,EAAC;;;gCACTC,oBASQ,OATR,EASQ,IATR,EASQ,cARJA,oBAOK,IAPL,EAOK,IAPL,EAOK,cANDA,oBAAuB,IAAvB,EAAuB;EAAnBC,KAAK,EAAC;AAAa,CAAvB,EAAgB,IAAhB,CAMC,eALDD,oBAA2B,IAA3B,EAA2B;EAAvBC,KAAK,EAAC;AAAiB,CAA3B,EAAgB,QAAhB,CAKC,eAJDD,oBAA4B,IAA5B,EAA4B;EAAxBC,KAAK,EAAC;AAAkB,CAA5B,EAAgB,SAAhB,CAIC,eAHDD,oBAA4B,IAA5B,EAA4B;EAAxBC,KAAK,EAAC;AAAkB,CAA5B,EAAgB,SAAhB,CAGC,eAFDD,oBAA4B,IAA5B,EAA4B;EAAxBC,KAAK,EAAC;AAAkB,CAA5B,EAAgB,SAAhB,CAEC,eADDD,oBAAqB,IAArB,EAAqB;EAAjBC,KAAK,EAAC;AAAW,CAArB,CACC,CAPL,CAQI,CATR;;AAAA;;iDAiBuF;;;;;;;;6DA3BnGD,oBAmCM,KAnCN,cAmCM,CAlCFE,aAAaC,oBAAb,CAkCE,EAjCFH,oBAAiE,IAAjE,EAAiE,IAAjE,EAAiE,aAArDA,oBAAgD,MAAhD,cAAgDI,sBAAbC,IAAa,CAAhD,EAAuC;EAAA;EAAvC,CAAqD,CAAjE,CAiCE,EAhCFL,oBA+BM,KA/BN,cA+BM,CA9BFM,UA8BE,EAzBFN,oBAwBQ,OAxBR,cAwBQ,CAvBJO,UAuBI,EAbJP,oBAYQ,OAZR,EAYQ,IAZR,EAYQ,oBAXJQ,oBAUKC,SAVL,EAUK,IAVL,EAUKC,YAVcC,iBAUd,EAVMC,IAAmB,IAAf;yBAAfJ,oBAUK,IAVL,EAUK;MAV4BK,GAAG,EAAED,IAAI,CAACE;IAUtC,CAVL,GACId,oBAAsB,IAAtB,EAAsB,IAAtB,EAAsBI,iBAAfQ,IAAI,CAACE,EAAU,CAAtB,EAAc;IAAA;IAAd,GACAd,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBI,iBAAjBQ,IAAI,CAACG,IAAY,CAAxB,EAAgB;IAAA;IAAhB,GACAf,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2BI,iBAApBQ,IAAI,CAACI,OAAe,CAA3B,EAAmB;IAAA;IAAnB,GACAhB,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2BI,iBAApBQ,IAAI,CAACK,OAAe,CAA3B,EAAmB;IAAA;IAAnB,GACAjB,oBAIK,IAJL,EAIK,IAJL,EAIK,CAHDE,aACcgB,sBADd,EACc;MADAC,EAAE,qBAAqBP,IAAI,CAACE,EAC5B;MADgCf,KAAK,EAAC;IACtC,CADd;wBAA2E,MAC3E;;;;KADA;;IAAA,SAGC,EADDC,oBAAmF,QAAnF,EAAmF;MAA3ED,KAAK,EAAC,qBAAqE;MAA1CqB,OAAK,YAAEC,mBAAUT,IAAI,CAACE,EAAf;IAAmC,CAAnF,EAAoE,QAApE,EAA0E;IAAA;IAA1E,EAA0EQ,UAA1E,CACC,CAJL,EALJ;GAUK,CAVL;;EAAA,CAWI,EAZR,CAaI,CAxBR,CAyBE,CA/BN,CAgCE,CAnCN,GAsCAC","names":["class","_createElementVNode","scope","_createVNode","_component_HeaderNav","_toDisplayString","user","_hoisted_5","_hoisted_7","_createElementBlock","_Fragment","_renderList","$data","item","key","id","name","address","contact","_component_router_link","to","onClick","$options","_hoisted_9","_createCommentVNode"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/Home.vue"],"sourcesContent":["<template >\n    <div class=\"row\">\n        <HeaderNav />\n        <h6>welcome <span class=\"text-success \">{{this.user}}</span></h6>\n        <div class=\"col\">\n            <div class=\"co--5 d-flex\">\n                <h6 class=\"text-primary \">List of Restaurants</h6>\n                h\n            </div>\n\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">R_Name</th>\n                        <th scope=\"col\">Address</th>\n                        <th scope=\"col\">Contact</th>\n                        <th scope=\"col\">Actions</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"item in restaurants\" :key=\"item.id\">\n                        <th>{{ item.id }}</th>\n                        <td>{{ item.name }}</td>\n                        <td>{{ item.address }}</td>\n                        <td>{{ item.contact }}</td>\n                        <td>\n                            <router-link :to=\"'/updaterestro/' + item.id\" class=\"text-decoration-none\">Update\n                            </router-link>\n                            <button class=\"btn btn-danger mx-3\" v-on:click=\"deleteRes(item.id)\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <!-- \n    <h3 class=\"text-success \">Practice for Vuex <span class=\"text-secondary\">(Data coming from json server)</span></h3>\n    <div class=\"row \">\n        <div class=\"col \">\n            <form @submit.prevent=\"submitform\">\n                <input type=\"text\" name=\"\" placeholder=\"Enter Name\" v-model=\"name\">\n                <input type=\"submit\" value=\"Add Name\" class=\"btn btn-primary mx-2\">\n            </form>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Remove</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\" (names, index) in allNames\" :key=\"index\">\n                        <th>{{ names.id }}</th>\n                        <td>{{ names.name }} </td>\n                        <td><button @click=\"removeName(names.id)\"\n                                style=\"border:none; background:transparent;cursor: pointer; outline: none; \"\n                                class=\"text-danger\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\"\n                                    class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\" />\n                                </svg>\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n                                data-target=\"#exampleModal\" @click=\"EditName(names.name, names.id)\">Edit\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\" modal fade\" id=\"exampleModal\" role=\"dialog\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Name</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                                style=\"border: none ; background-color: transparent; \">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your name here..\" v-model=\"editUser\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">close</button>\n                                    <button type=\"button\" class=\"btn btn-success\"\n                                        @click=\"updateStateUser({ editUser, editId })\"\n                                        data-dismiss=\"modal\">Save</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div> -->\n\n\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport HeaderNav from './Header.vue'\nimport axios from 'axios'\nexport default {\n    name: \"HomePage\",\n    components: {\n        HeaderNav\n    },\n    computed: mapGetters([\"allNames\"]),\n    data() {\n        return {\n            UserName: \"\",\n            restaurants: [],\n            name: \"\",\n            editUser: \"\",\n            updatedName: \"\",\n            editId: \"\",\n            count: \"\",\n            user: ''\n        }\n    },\n    methods: {\n        async deleteRes(id) {\n\n            let result = await axios.delete('http://localhost:3000/restaurants/' + id);\n            if (result.status == 200) {\n                this.loadData()\n            }\n        },\n        async loadData() {\n            const user = localStorage.getItem('user - info')\n            this.UserName = JSON.parse(user).name\n            const result = await axios.get('http://localhost:3000/restaurants');\n            this.restaurants = result.data\n        },\n        ...mapActions(['addName', 'removeName', 'updateStateUser']),\n        submitform() {\n            this.addName({ id: this.idd(), name: this.name });\n\n        },\n        EditName(data, id) {\n            this.editUser = data;\n            this.editId = id;\n\n        },\n        idd() {\n\n            return this.count = \"New Name\"\n        }\n\n    },\n    mounted() {\n\n        this.user = localStorage.getItem('user - info')\n        if (!this.user) {\n            this.$router.push({ name: 'SignUp' })\n        }\n        this.loadData()\n    }\n}\n</script>\n\n\n"]},"metadata":{},"sourceType":"module"}