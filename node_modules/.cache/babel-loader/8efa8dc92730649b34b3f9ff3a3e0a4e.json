{"ast":null,"code":"import loginInput from \"/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/validation/loginInput.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'LogIn',\n\n  data() {\n    return {\n      email: \"\",\n      Password: \"\",\n      errors: {}\n    };\n  },\n\n  methods: {\n    async LogIn() {\n      const {\n        isInvalid,\n        errors\n      } = loginInput({\n        email: this.email,\n        password: this.password\n      });\n\n      if (isInvalid) {\n        this.errors = errors;\n      } else {\n        const result = await axios.get(`http://localhost:3000/user?email=${this.Email}&password=${this.Password}`);\n\n        if (result.status === 200 && result.data.length > 0) {\n          localStorage.setItem(\"user - info\", JSON.stringify(result.data[0]));\n          this.$router.push({\n            name: 'Home'\n          });\n        }\n      }\n    }\n\n  },\n\n  mounted() {\n    const user = localStorage.getItem('user - info');\n\n    if (user) {\n      this.$router.push({\n        name: 'Home'\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"AA0BA,OAAOA,UAAP,MAAuB,oFAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe;EAEXC,IAAI,EAAE,OAFK;;EAGXC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EADJ;MAEHC,QAAQ,EAAE,EAFP;MAGHC,MAAM,EAAE;IAHL,CAAP;EAKH,CATU;;EAUXC,OAAO,EAAE;IACL,MAAMC,KAAN,GAAc;MAEV,MAAM;QAAEC,SAAF;QAAaH;MAAb,IAAwBN,UAAU,CAAC;QACrCI,KAAK,EAAE,KAAKA,KADyB;QAErCM,QAAQ,EAAE,KAAKA;MAFsB,CAAD,CAAxC;;MAIA,IAAID,SAAJ,EAAe;QACX,KAAKH,MAAL,GAAcA,MAAd;MACJ,CAFA,MAEO;QACH,MAAMK,MAAK,GAAI,MAAMV,KAAK,CAACW,GAAN,CAChB,oCAAmC,KAAKC,KAAM,aAAY,KAAKR,QAAS,EADxD,CAArB;;QAGA,IAAIM,MAAM,CAACG,MAAP,KAAkB,GAAlB,IAAyBH,MAAM,CAACR,IAAP,CAAYY,MAAZ,GAAqB,CAAlD,EAAqD;UACjDC,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACR,IAAP,CAAY,CAAZ,CAAf,CAApC;UACA,KAAKiB,OAAL,CAAaC,IAAb,CAAkB;YAAEnB,IAAI,EAAE;UAAR,CAAlB;QACJ;MAEJ;IAEJ;;EApBK,CAVE;;EAiCXoB,OAAO,GAAG;IAEN,MAAMC,IAAG,GAAIP,YAAY,CAACQ,OAAb,CAAqB,aAArB,CAAb;;IACA,IAAID,IAAJ,EAAU;MACN,KAAKH,OAAL,CAAaC,IAAb,CAAkB;QAAEnB,IAAI,EAAE;MAAR,CAAlB;IACJ;EACJ;;AAvCW,CAAf","names":["loginInput","axios","name","data","email","Password","errors","methods","LogIn","isInvalid","password","result","get","Email","status","length","localStorage","setItem","JSON","stringify","$router","push","mounted","user","getItem"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/Login.vue"],"sourcesContent":["<template >\n    <div class=\"row \">\n        <div class=\"col h-25 w-25 text-center mx-auto\">\n            <img class=\"LogoImg\" src=\"../assets/Images/Logo/pattern-on-clay-pot-for-indian-restaurant-6940ld.png\" />\n            <h1 class=\"mt-3 pb-2\">Log In</h1>\n\n            <div class=\"col\">\n                <form @submit.prevent=\"LogIn()\">\n                    <input class=\"border border-primary\" type=\"text\" placeholder=\"Email\" v-model=\"email\" /><br />\n                    <h1 class=\"inv\">{{errors.email}}</h1>\n                    <input class=\"border border-primary\" type=\"text\" placeholder=\"Password\"\n                        v-model=\"password\" /><br /><br />\n                    <button class=\"btn btn-success\" type=\"submit\">Log In &nbsp;</button>\n                </form>\n\n            </div>\n            <div class=\"col mt-2 text-light\">\n                <h3 class=\"btn btn-success text-light\">\n                    <router-link to=\"/signup\" class=\"text-light text-decoration-none\">SignUp</router-link>\n                </h3>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport loginInput from \"/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/validation/loginInput.js\"\nimport axios from \"axios\";\nexport default {\n\n    name: 'LogIn',\n    data() {\n        return {\n            email: \"\",\n            Password: \"\",\n            errors: {}\n        }\n    },\n    methods: {\n        async LogIn() {\n\n            const { isInvalid, errors } = loginInput({\n                email: this.email,\n                password: this.password\n            })\n            if (isInvalid) {\n                this.errors = errors\n            } else {\n                const result = await axios.get(\n                    `http://localhost:3000/user?email=${this.Email}&password=${this.Password}`\n                );\n                if (result.status === 200 && result.data.length > 0) {\n                    localStorage.setItem(\"user - info\", JSON.stringify(result.data[0]))\n                    this.$router.push({ name: 'Home' })\n                }\n\n            }\n\n        }\n\n    },\n    mounted() {\n\n        const user = localStorage.getItem('user - info')\n        if (user) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n\n}\n\n</script>"]},"metadata":{},"sourceType":"module"}