{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport HeaderNav from './Header.vue';\nexport default {\n  name: \"ToDo\",\n  components: {\n    HeaderNav\n  },\n  computed: mapGetters(['alltodo']),\n\n  created() {\n    this.fetchUser();\n  },\n\n  data() {\n    return {\n      ToDoName: \"\",\n      ToDoEmail: \"\"\n    };\n  },\n\n  methods: { ...mapActions(['fetchUser', 'removeToDo', 'updateToDo'])\n  },\n\n  mounted() {\n    const user = localStorage.getItem('user - info');\n\n    if (!user) {\n      this.$router.push({\n        name: 'LogIn'\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"AA2EA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,eAAe;EACXC,IAAI,EAAE,MADK;EAEXC,UAAU,EAAE;IACRF;EADQ,CAFD;EAKXG,QAAQ,EAAEL,UAAU,CAAC,CAAC,SAAD,CAAD,CALT;;EAMXM,OAAO,GAAG;IACN,KAAKC,SAAL;EACH,CARU;;EASXC,IAAI,GAAE;IACF,OAAM;MACFC,QAAQ,EAAC,EADP;MAEFC,SAAS,EAAC;IAFR,CAAN;EAKH,CAfU;;EAgBXC,OAAO,EAAE,EACL,GAAGV,UAAU,CAAC,CAAC,WAAD,EAAc,YAAd,EAA2B,YAA3B,CAAD;EADR,CAhBE;;EAqBXW,OAAO,GAAG;IAEN,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;;IACA,IAAI,CAACF,IAAL,EAAW;MACP,KAAKG,OAAL,CAAaC,IAAb,CAAkB;QAAEd,IAAI,EAAE;MAAR,CAAlB;IACJ;EAEJ;;AA5BW,CAAf","names":["mapGetters","mapActions","HeaderNav","name","components","computed","created","fetchUser","data","ToDoName","ToDoEmail","methods","mounted","user","localStorage","getItem","$router","push"],"sourceRoot":"","sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/components/ToDo.vue"],"sourcesContent":["<template>\n    <HeaderNav />\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">User's Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\" (todo, index) in alltodo\" :key=\"index\">\n                        <th>{{ todo.id }}</th>\n                        <td>{{ todo.name }} </td>\n                        <td>{{ todo.email }} </td>\n                        <td><button @click=\"removeToDo(todo.id)\"\n                                style=\"border:none; background:transparent;cursor: pointer; outline: none; \"\n                                class=\"text-danger\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\"\n                                    class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n                                    <path\n                                        d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\" />\n                                </svg>\n                            </button>\n                        </td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\n                                data-target=\"#exampleModal\" @click=\"EditTodo(})\">Edit\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\" modal fade\" id=\"exampleModal\" role=\"dialog\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Name</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                                style=\"border: none ; background-color: transparent; \">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your Name here..\" v-model=\"ToDoName\">\n                                </div>\n                                <div class=\"form-group mt-2\">\n                                    <input type=\"text\" class=\"form-control\" id=\"recipient-name\"\n                                        placeholder=\"Edit your Email here..\" v-model=\"ToDoEmail\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">close</button>\n                                    <button type=\"button\" class=\"btn btn-success\" @click=\"updateToDo()\"\n                                        data-dismiss=\"modal\">Save</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n\n\nimport { mapGetters, mapActions } from 'vuex'\nimport HeaderNav from './Header.vue'\nexport default {\n    name: \"ToDo\",\n    components: {\n        HeaderNav\n    },\n    computed: mapGetters(['alltodo']),\n    created() {\n        this.fetchUser()\n    },\n    data(){\n        return{\n            ToDoName:\"\",\n            ToDoEmail:\"\"\n            \n        }\n    },\n    methods: {\n        ...mapActions(['fetchUser', 'removeToDo','updateToDo']),\n\n       \n    },\n    mounted() {\n\n        const user = localStorage.getItem('user - info')\n        if (!user) {\n            this.$router.push({ name: 'LogIn' })\n        }\n\n    }\n}\n\n</script>   \n\n"]},"metadata":{},"sourceType":"module"}