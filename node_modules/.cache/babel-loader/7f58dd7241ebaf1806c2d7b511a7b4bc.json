{"ast":null,"code":"import axios from 'axios'; // import { parseInt } from 'core-js/core/number'\n\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    names: [{\n      id: 1,\n      name: \"rahul\"\n    }, {\n      id: 2,\n      name: \"drishit\"\n    }, {\n      id: 3,\n      name: \"ved\"\n    }, {\n      id: 4,\n      name: \"het\"\n    }],\n    database: [],\n    todo: []\n  },\n  getters: {\n    allNames: state => state.names,\n    alldatabase: state => state.database,\n    alltodo: state => state.todo\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names];\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id);\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        if (el.id === data.editId) {\n          state.names[index].name = data.editUser;\n        }\n      });\n    },\n    fetchUsersData: (state, userInfo) => {\n      state.database = userInfo;\n      state.todo = userInfo;\n    },\n    RemoveId: (state, RemoveId) => {\n      state.todo = state.todo.filter(todo => todo.id != RemoveId);\n    },\n    updateToDo: (state, data) => {\n      state.todo.forEach((el, index) => {\n        if (el.id === data.ToDoId) {\n          state.todo[index].name = data.ToDoName, state.todo[index].email = data.ToDoEmail;\n        }\n      });\n    },\n    addNewName: (state, NewData) => {\n      state.todo = [NewData, ...state.todo];\n    },\n    FilterToDo: (state, todo) => state.todo = todo\n  },\n  actions: {\n    addName: ({\n      commit\n    }, userInfo) => {\n      commit(\"newName\", userInfo);\n    },\n    removeName: ({\n      commit\n    }, id) => {\n      commit(\"deleteName\", id);\n    },\n    updateStateUser: ({\n      commit\n    }, name) => {\n      commit(\"editStateUser\", name);\n    },\n\n    async fetchUser({\n      commit\n    }) {\n      const response = await axios.get('http://localhost:3000/user');\n      commit('fetchUsersData', response.data);\n    },\n\n    RemoveId: ({\n      commit\n    }, RemoveId) => {\n      commit('RemoveId', RemoveId);\n      console.log;\n    },\n    updateToDo: ({\n      commit\n    }, data) => {\n      commit('updateToDo', data);\n    },\n    addNewName: ({\n      commit\n    }, NewData) => {\n      commit('addNewName', NewData);\n    },\n\n    async FilterToDo({\n      commit\n    }, e) {\n      const limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n\n      if (limit > 40) {\n        const response = await axios.get('http://localhost:3000/user');\n        this.commit('FilterToDo', response.data);\n      }\n\n      const response = await axios.get(`http://localhost:3000/user/?_limit=${limit}`);\n      commit('FilterToDo', response.data);\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["axios","createStore","state","names","id","name","database","todo","getters","allNames","alldatabase","alltodo","mutations","newName","userInfo","deleteName","filter","editStateUser","data","forEach","el","index","editId","editUser","fetchUsersData","RemoveId","updateToDo","ToDoId","ToDoName","email","ToDoEmail","addNewName","NewData","FilterToDo","actions","addName","commit","removeName","updateStateUser","fetchUser","response","get","console","log","e","limit","parseInt","target","options","selectedIndex","innerText","modules"],"sources":["/home/ts/Desktop/pract_vue/Restaurants/restro_project/src/store/index.js"],"sourcesContent":["import axios from 'axios'\n// import { parseInt } from 'core-js/core/number'\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    names: [\n      {\n        id: 1,\n        name: \"rahul\",\n\n      }, {\n        id: 2,\n        name: \"drishit\",\n\n      }, {\n        id: 3,\n        name: \"ved\",\n\n      }, {\n        id: 4,\n        name: \"het\",\n\n      },\n    ],\n    database: [\n\n    ],\n    todo: [\n\n    ]\n  },\n  getters: {\n    allNames: state => state.names,\n    alldatabase: state => state.database,\n    alltodo: state => state.todo,\n  },\n  mutations: {\n    newName: (state, userInfo) => {\n      state.names = [userInfo, ...state.names]\n    },\n    deleteName: (state, id) => {\n      state.names = state.names.filter(name => name.id != id)\n\n    },\n    editStateUser: (state, data) => {\n      state.names.forEach((el, index) => {\n        if (el.id === data.editId) {\n          state.names[index].name = data.editUser;\n        }\n      })\n    },\n    fetchUsersData: (state, userInfo) => {\n      state.database = userInfo\n      state.todo = userInfo\n\n    },\n    RemoveId: (state, RemoveId) => {\n      state.todo = state.todo.filter(todo => todo.id != RemoveId)\n\n    },\n    updateToDo: (state, data) => {\n\n      state.todo.forEach((el, index) => {\n        if (el.id === data.ToDoId) {\n          state.todo[index].name = data.ToDoName,\n            state.todo[index].email = data.ToDoEmail\n\n        }\n      })\n    },\n    addNewName: (state, NewData) => {\n      state.todo = [NewData, ...state.todo]\n    },\n    FilterToDo: (state, todo) => (\n      state.todo = todo\n    )\n  },\n  actions: {\n    addName: ({ commit }, userInfo) => {\n      commit(\"newName\", userInfo)\n\n    },\n    removeName: ({ commit }, id) => {\n      commit(\"deleteName\", id)\n    },\n    updateStateUser: ({ commit }, name) => {\n      commit(\"editStateUser\", name)\n    },\n    async fetchUser({ commit }) {\n\n      const response = await axios.get('http://localhost:3000/user')\n      commit('fetchUsersData', response.data)\n\n    },\n    RemoveId: ({ commit }, RemoveId) => {\n      commit('RemoveId', RemoveId)\n      console.log\n      \n    },\n    updateToDo: ({ commit }, data) => {\n      commit('updateToDo', data)\n    },\n    addNewName: ({ commit }, NewData) => {\n      commit('addNewName', NewData)\n    },\n    async FilterToDo({ commit }, e) {\n\n      const limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText)\n      if (limit >40 ) {\n        const response = await axios.get('http://localhost:3000/user')\n        this.commit('FilterToDo', response.data)\n      }\n      const response = await axios.get(`http://localhost:3000/user/?_limit=${limit}`)\n      commit('FilterToDo', response.data)\n    }\n  },\n  modules: {\n  }\n})\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}